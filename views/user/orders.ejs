<style>
    /* General Container Styling */
    .container {
        width: 90%;
        margin: auto;
        padding: 20px;
        font-family: 'Arial', sans-serif;
        color: #a84df1;
    }

    /* Order Card Styling */
    .order-card {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        border: 1px solid #ddd;
        padding: 20px;
        margin-bottom: 20px;
        border-radius: 8px;
        background-color: #ffffff;
        box-shadow: 0 4px 8px rgba(21, 145, 124, 0.1);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .order-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }

    /* Order Information Styling */
    .order-info {
        margin-bottom: 15px;
    }

    .order-details {
        margin-bottom: 15px;
        font-size: 15px;
        line-height: 1.5;
    }

    .order-detail-item {
        margin-bottom: 8px;
    }

    /* Header Styling */
    h2, h3 {
        color: #2c3e50;
    }

    /* Order Action Button Styling */
    .order-actions {
        display: flex;
        justify-content: flex-end;
    }

    .cancel-button {
        background-color: #d9534f;
        color: white;
        border: none;
        padding: 8px 16px;
        font-size: 14px;
        cursor: pointer;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

    .cancel-button:hover {
        background-color: #c9302c;
    }

    /* Media Query for Responsive Design */
    @media (max-width: 768px) {
        .order-card {
            padding: 15px;
        }

        .cancel-button {
            width: 100%;
            padding: 10px;
        }
    }
</style>

<div class="container">
    <h2>Order Management</h2>
    
    <!-- Order History Section -->
    <div class="order-history">
        <h3>Your Orders</h3>
        <% orders.forEach(order => { %>
            <div class="order-card">
                <div class="order-info">
                    <div class="order-details">
                        <div class="order-detail-item"><strong>Order ID:</strong> <%= order.orderId %></div>
                        <div class="order-detail-item"><strong>Date:</strong> <%= new Date(order.orderDate).toLocaleDateString() %></div>
                        <div class="order-detail-item"><strong>Total Amount:</strong> $<%= order.totalAmount %></div>
                        <div class="order-detail-item"><strong>Payment Method:</strong> <%= order.paymentMethod %></div>
                        <div class="order-detail-item"><strong>Status:</strong> <%= order.status %></div>
                        
                        <!-- Product Names Section -->
                        <div class="order-detail-item">
                            <div class="order-detail-item">
                                <strong>Products:</strong>
                                <ul>
                                    <% order.products.forEach(product => { %>
                                        <li><%= product.productId.name %> - Quantity: <%= product.quantity %></li>
            
                                    <% }) %>
                                </ul>
                            </div>
                        </div>

                        <div class="order-detail-item">
                            <strong>Shipping Address:</strong>
                            <% if (order.addressId) { %>
                                <p><%= order.addressId.street %>, <%= order.addressId.city %>, <%= order.addressId.pincode %></p>
                            <% } else { %>
                                <p>No shipping address provided</p>
                            <% } %>
                        </div>
                    </div>
                </div>
                <div class="order-actions">
                    <% if (order.status === 'Processing' || order.status === 'Pending') { %>
                        <!-- Order Cancellation Option -->
                        <button onclick="cancelOrder('<%= order._id %>')" class="cancel-button">Cancel Order</button>
                    <% } else { %>
                        <p><%= order.status %></p>
                    <% } %>
                </div>
            </div>
        <% }) %>
    </div>
</div>


<script>
    // Function to show the cancellation modal using SweetAlert
    function cancelOrder(orderId) {
        Swal.fire({
            title: 'Cancel Order',
            text: 'Are you sure you want to cancel this order?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, cancel it!',
            cancelButtonText: 'No, keep it'
        }).then((result) => {
            if (result.isConfirmed) {
                // Show another SweetAlert for providing cancellation reason
                Swal.fire({
                    title: 'Cancel Order',
                    html: `
                        <select id="cancelReason" class="swal2-input">
                            <option value="Wrong item">Wrong item</option>
                            <option value="Damaged item">Damaged item</option>
                            <option value="Other">Other</option>
                        </select>
                        <input id="cancelReasonOther" class="swal2-input" placeholder="Please specify other reason" style="display: none;">
                    `,
                    focusConfirm: false,
                    preConfirm: () => {
                        const reasonSelect = document.getElementById('cancelReason');
                        let cancelReason = reasonSelect.value;
                        
                        if (cancelReason === 'Other') {
                            const otherReason = document.getElementById('cancelReasonOther').value.trim();
                            if (otherReason) {
                                cancelReason = otherReason;
                            } else {
                                Swal.showValidationMessage('Please specify the reason for cancellation.');
                                return false;
                            }
                        }
                        
                        return {
                            reason: cancelReason,
                            orderId: orderId
                        };
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch('/cancelOrder', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(result.value),
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire('Cancelled!', 'Your order has been cancelled.', 'success')
                                    .then(() => window.location.reload());
                            } else {
                                Swal.fire('Error!', 'Error cancelling order: ' + data.message, 'error');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            Swal.fire('Error!', 'An error occurred while cancelling the order.', 'error');
                        });
                    }
                });
            }
        });
    }
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
