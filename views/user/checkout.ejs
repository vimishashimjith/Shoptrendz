<!-- Breadcrumb Start -->
<div class="col-12">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <% breadcrumbs.forEach((crumb, index) => { %>
                <% if (index < breadcrumbs.length - 1) { %>
                    <li class="breadcrumb-item"><a href="<%= crumb.url %>"><%= crumb.name %></a></li>
                <% } else { %>
                    <li class="breadcrumb-item active" aria-current="page"><%= crumb.name %></li>
                <% } %>
            <% }) %>
        </ol>
    </nav>
</div>

<!-- Breadcrumb End -->

<style>
    /* Button Styles */
    #submit-button {
        width: 20%;
        background-color: #6f42c1;
        padding: 10px 20px;
        border-radius: 10px;
        color: white;
        border: none;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    #submit-button:hover {
        background-color: #5a2a8d;
    }

    /* Address Option Styles */
    .address-option {
        margin-bottom: 15px;
        padding: 15px;
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #f9f9f9;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s ease;
    }

    .address-option:hover {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .address-option p {
        margin: 0;
        font-size: 14px;
        color: #333;
    }

    .add-address-btn {
        margin-top: 20px;
        background-color: #28a745;
        border-color: #28a745;
    }

    .add-address-btn:hover {
        background-color: #218838;
        border-color: #1e7e34;
    }

    /* Order Total Section Styles */
    .order-total {
        border-radius: 8px;
        background-color: #f9f9f9;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        padding: 20px;
    }

    .order-total h5 {
        font-size: 18px;
        margin-bottom: 15px;
    }

    .order-total .d-flex {
        margin-bottom: 10px;
    }

    .order-total .d-flex p {
        margin: 0;
        font-size: 14px;
    }

    /* Payment Section Styles */
    .payment-method {
        border-radius: 8px;
        background-color: #f9f9f9;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin-top: 20px;
    }

    .payment-method .custom-control-label {
        font-size: 14px;
    }

    .edit-btn {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .payment-method .btn-primary {
        background-color: #6f42c1;
        border-color: #6f42c1;
        font-size: 16px;
        padding: 10px;
        border-radius: 8px;
    }

    .payment-method .btn-primary:hover {
        background-color: #5a2a8d;
        border-color: #5a2a8d;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        .col-lg-8, .col-lg-4 {
            padding: 15px;
        }

        .order-total {
            margin-top: 20px;
        }
    }
</style>

<!-- Checkout Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-lg-8">
            <h5 class="section-title position-relative text-uppercase mb-3">
                <span class="bg-secondary pr-3">Billing Address</span>
            </h5>
           <!-- Address Selection -->
<div class="bg-light p-30 mb-5">
    <% if (addresses.length > 0) { %>
        <h6 class="mb-3">Select Existing Address</h6>
        <% addresses.forEach(function(address) { %>
            <div class="address-option">
                <input type="radio" name="address" id="address-<%= address._id %>" value="<%= address._id %>" onclick="selectAddress('<%= address._id %>')">
               <br>
                <label for="address-<%= address._id %>">
                    <p><%= address.fullname %></p>
                    <p><%= address.street %>, <%= address.city %>, <%= address.state %> - <%= address.pincode %></p>
                    <p><%= address.country %></p>
                    <p>Mobile No: <%= address.mobile %></p>
                </label>
                <button class="edit-btn" onclick="editAddress('<%= address._id %>')">Edit</button>
            </div>
        <% }) %>
    <% } else { %>
        <p>No addresses found. Please add a new address.</p>
    <% } %>
    <button class="btn btn-primary add-address-btn" onclick="window.location.href='/add-address'">Add New Address</button>
</div>
 </div>

        <div class="col-lg-4">
            <h5 class="section-title position-relative text-uppercase mb-3">
                <span class="bg-secondary pr-3">Order Total</span>
            </h5>
            <!-- Order Total Section -->
            <div class="order-total">
                <div class="border-bottom">
                    <h6 class="mb-3">Products</h6>
                    <% if (cart && cart.products.length > 0) { %>
                        <% cart.products.forEach(item => { %>
                            <div class="d-flex justify-content-between">
                                <p><%= item.productId.name %></p>
                                <p>₹<%= (item.productId.price * item.quantity).toFixed(2) %></p>
                            </div>
                        <% }) %>
                    <% } else { %>
                        <div class="text-center">Your cart is empty.</div>
                    <% } %>
                </div>
                <div class="border-bottom pt-3 pb-2">
                    <div class="d-flex justify-content-between mb-3">
                        <h6>Subtotal</h6>
                        <h6>₹<%= subtotal.toFixed(2) %></h6>
                    </div>
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-medium">Shipping</h6>
                        <h6 class="font-weight-medium">₹<%= shippingCost.toFixed(2) %></h6>
                    </div>
                </div>
                <div class="pt-2">
                    <div class="d-flex justify-content-between mt-2">
                        <h5>Total</h5>
                        <h5>₹<%= total.toFixed(2) %></h5>
                    </div>
                </div>
            </div>

            <div class="payment-method">
                <h5 class="section-title position-relative text-uppercase mb-3">
                    <span class="bg-secondary pr-3">Payment</span>
                </h5>
                <div class="bg-light p-30">
                    <div class="form-group">
                        <div class="custom-control custom-radio">
                            <input type="radio" class="custom-control-input" name="payment" id="cashondelivery" value="COD">
                            <label class="custom-control-label" for="cashondelivery">Cash On Delivery</label>
                        </div>
                    </div>
                    <div class="form-group mb-4">
                        <div class="custom-control custom-radio">
                            <input type="radio" class="custom-control-input" name="payment" id="banktransfer" value="Bank Transfer">
                            <label class="custom-control-label" for="banktransfer">Razorpay</label>
                        </div>
                    </div>
                    <button class="btn btn-block btn-primary font-weight-bold py-3" onclick="placeOrder()">Place Order</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Checkout End -->

<!-- SweetAlert CSS and JS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<!-- JavaScript for Handling Address Management -->
<!-- Updated JavaScript for Address Management -->
<script>
    let selectedAddressId = null;

    // Function to handle address selection
    function selectAddress(addressId, index) {
				document.querySelectorAll('.address-card').forEach((card, idx) => {
					if (idx !== index) {
					card.remove();
					} else {
					card.classList.add('selected-address');
					card.querySelector('.select-button').textContent = 'Selected';
					card.querySelector('.select-button').disabled = true;
					}
				});

				selectedAddressId = addressId;
				fetchShippingCharge(addressId);
				}
				async function fetchShippingCharge(addressId){
					try{
						const response = await fetch(`/shippingCharge?addressId=${addressId}`);
						if(!response.ok){
							throw new Error('Failed to fetch shipping charge');
						}
						const data = await response.json();
						const shippingcharge = parseFloat(data.shippingCharge); //shipping charge
						console.log(shippingcharge,'shipping charge');
						let total = parseFloat($('#finalTotal').val()); // current total
						console.log(total,'current total');
						if (isNaN(total)) {
							console.error('Current total amount is not a number');
							swal("Error", "Invalid current total amount.", "error");
							return;
						}
						if (isNaN(shippingcharge)) {
							console.error('Discount amount is not a number');
							swal("Error", "Invalid discount amount received.", "error");
							return;
						}
						const newTotal = Math.max(total + shippingcharge,0);

						//update current values
						$('#orderTotal').text(newTotal.toFixed(2));
						$('#finalTotal').val(newTotal.toFixed(2));
						//discount row show
						$('#shippingChargeRow').show();
						$('#shippingChargeAmount').html(`<i class="bi bi-currency-rupee"></i>${shippingcharge.toFixed(2)}`);
						swal("Shipping Charge Added", `shipping chare${shippingcharge.toFixed(2)} added`, "success");


					}catch(error){
						console.error('Error fetching shipping charge:',error.message);
						swal("Error", "An error occurred while adding shipping charge. Please try again later.", "error");
					}
				}





    // Function to handle address editing
    function editAddress(addressId) {
        window.location.href = `/edit-address/${addressId}`;
    }

    // Function to place the order
    function placeOrder() {
    const paymentMethod = document.querySelector('input[name="payment"]:checked')?.value;

    if (!selectedAddressId) {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Please select an address!'
        });
        return;
    }

    if (!paymentMethod) {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Please select a payment method!'
        });
        return;
    }

   $.ajax({
    url: '/checkout',
    type: 'POST',
    data: {
        addressId: selectedAddressId,
        paymentMethod: paymentMethod
    },
        success: function(response) {
            if (response.success) {
                if (paymentMethod === 'Bank Transfer') {
                    // Initiate Razorpay payment
                    var options = {
                        key: 'YOUR_RAZORPAY_KEY', // Your Razorpay key
                        amount: response.amount * 100, // Amount in paise
                        currency: response.currency,
                        name: 'Your Company',
                        description: 'Order ID: ' + response.orderId,
                        image: 'https://your-logo-url.com',
                        order_id: response.orderId,
                        handler: function (paymentResponse) {
                            // Handle payment success
                            Swal.fire('Payment Successful!', 'Your order has been placed.', 'success').then(() => {
                                window.location.href = '/orders';
                            });
                        },
                        prefill: {
                            name: '',
                            email: '',
                            contact: ''
                        },
                        theme: {
                            color: '#6f42c1'
                        }
                    };
                    var razorpay = new Razorpay(options);
                    razorpay.open();
                } else {
                    // For COD
                    Swal.fire(
                        'Order Placed!',
                        response.message || 'Your order has been placed successfully.',
                        'success'
                    ).then(() => {
                        window.location.href = '/orders'; // Redirect to orders page
                    });
                }
            }
        },
        error: function() {
            Swal.fire('Error!', 'There was an error creating your order.', 'error');
        }
    });
}

</script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>